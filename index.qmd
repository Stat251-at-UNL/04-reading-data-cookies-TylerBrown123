---
title: "Chocolate Chip Cookies"
execute:
  error: true
author: "Tyler Brown"
output: html_document
---

## Reading In the Data

First, read in the CSV data of cookie ingredients. Make sure that your end-result data has appropriate types for each column - these should match the types provided in the documentation in the README.md file.

```{r}
library(ggplot2)
library(tidyverse)
cookie <- read.csv("choc_chip_cookie_ingredients.csv")
AR_1_cookie <- filter(cookie, Recipe_Index == "AR_1")
all_purpose_flour <- filter(cookie, Ingredient == "all purpose flour")
ounce <- filter(cookie)
print(head(cookie))
```

```{python}
import pandas as pd
cookie = pd.read_csv("choc_chip_cookie_ingredients.csv")
print(cookie.head())
```

## Exploratory Data Analysis

Exploratory data analysis is the process of getting familiar with your dataset. To get started, [this blog post](https://www.mrdbourke.com/a-gentle-introduction-to-exploratory-data-analysis/) provides a nice checklist to get you thinking:

> 1.  What question(s) are you trying to solve (or prove wrong)?
> 2.  What kind of data do you have and how do you treat different types?
> 3.  What's missing from the data and how do you deal with it?
> 4.  Where are the outliers and why should you care about them?
> 5.  How can you add, change or remove features to get more out of your data?

### Generating Questions

Generate at least 5 questions you might explore using this database of cookie ingredients.

1.  How many different recipes are there?

2.  Do the recipes that have a different index starter have a largely different average rating?

3.  How many recipes have some sort of special ingredient, meaning it is the only recipe where it is used?

4.  What are the most used units of measurement?

5.  How many ingredients are used in each recipe?

### Skimming the Data

One thing we often want to do during EDA is to examine the quality of the data - are there missing values? What quirks might exist in the dataset?

The `skimr` package in R, and the similar `skimpy` package in python (which has a much better name, in my opinion), can help provide visual summaries of the data.

Install both packages, and read the package documentation ([R](https://cran.r-project.org/web/packages/skimr/vignettes/skimr.html), [Python](https://pypi.org/project/skimpy/)).

\[Part 1\] Use each package and generate summaries of your data that require the use of at least some non-default options in each package's `skim` function.

```{r}
library(skimr)
library(tidyverse)
library(ggplot2)
cookie |>
  select(where(is.numeric)) |>
  skim()
```

```{python}
from skimpy import skim
numeric_cookie = cookie.select_dtypes(include=['number'])
skim(numeric_cookie)
```

\[Part 2\] Write 1-2 sentences about what you can tell from each summary display you generate. Did you discover anything new about the data?

From the skim summaries I can see that the ratings are actually really good for most of the cookies (as seen by the quartiles). This is new to me as I saw a good amount of weird ingredients and such so I thought that there would be a lot of cookies that had weird ratings. This could be a result of NAs however so I could look further into this.

### Generating Tables

Another useful technique for exploratory data analysis is to generate summary tables. You may want to use the `dplyr` package in R (`group_by` or `count` functions), as well as the `groupby` and `count` methods in Pandas. [Python example](https://sparkbyexamples.com/pandas/pandas-groupby-count-examples/), [R example](https://dplyr.tidyverse.org/reference/count.html)

\[Part 1\] Using R and Python, generate a table that shows what **proportion** of recipes contain each type of ingredient, for the most common 20 ingredients.
```{r}
library(ggplot2)
library(tidyverse)
length(unique(cookie$Recipe_Index))
cookie_table <- cookie |>
  distinct(Recipe_Index, Ingredient) |>
  group_by(Ingredient) |>
  summarise(number_recipes = n()) |>
  mutate(proportion_of_recipes = number_recipes/209) |>
  arrange(desc(proportion_of_recipes)) |>
  top_n(20)

print(cookie_table)
  
```

```{python}
import pandas as pd
cookie.columns
cookie["Recipe_Index"].nunique()
cookie_table = (
  cookie.drop_duplicates(subset=["Recipe_Index", "Ingredient"])
  .groupby("Ingredient")
  .size()
  .reset_index(name="number_recipes")
)
cookie_table["proportion_of_recipes"] = (cookie_table["number_recipes"] / 209)

cookie_table = cookie_table.sort_values(by="proportion_of_recipes", ascending=False).head(20)

print(cookie_table)
  

```

\[Part 2\] Print out a character string that lists all of the ingredients that do not appear in at least 20 recipes.
```{r}
ingredient_string <- paste(
  cookie_table$Ingredient[cookie_table$number_recipes <= 20],
  collapse = ", ")

print(ingredient_string)
```

```{python}
ingredient_string = ", ".join(cookie_table[cookie_table["number_recipes"] < 20]["Ingredient"])

print(ingredient_string)
```

### Visualization

Using whatever plotting system you are comfortable with in R or python, see if you can create a couple of useful exploratory data visualizations which address one of the questions you wrote above - or another question which you've come up with as you've worked on this assignment.

\[Part 1\] Create at least one plot (it doesn't have to be pretty) that showcases an interesting facet of the data.

```{r}
ingredient_count_in_recipes <- cookie |>
  group_by(Recipe_Index) |>
  summarise(number_ingredients = n()) |>
  arrange(desc(number_ingredients))

ggplot(ingredient_count_in_recipes, aes(x = number_ingredients)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Ingredient Counts Per Recipe Distribution",
       x = "Number of Ingredients",
       y = "Number of Recipes Containing")
```


\[Part 2\] Write 2-3 sentences about what you can learn from that plot and what directions you might want to investigate from here.

From this plot, I can see that most of the recipes have around 10 ingredients, and it seems to be approximately bell shaped meaning the further it gets from 10 in either direction, the less recipes have that many ingredients. To further investigate, I could look at if having 10, or close to 10, ingredients actually corresponds to a good rating. More specifically, do most recipes have 10 ingredients because that is actually what makes the cookie better, or is it for some other reason?
